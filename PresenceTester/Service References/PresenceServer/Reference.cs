//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PresenceTester.PresenceServer {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn:cisco:cup:presence:soap", ConfigurationName="PresenceServer.PresenceSoapPortType")]
    public interface PresenceSoapPortType {
        
        // CODEGEN: Generating message contract since the operation login is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="urn:cisco:cup:presence:soap/login", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        PresenceTester.PresenceServer.loginResponse1 login(PresenceTester.PresenceServer.loginRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:cisco:cup:presence:soap/login", ReplyAction="*")]
        System.Threading.Tasks.Task<PresenceTester.PresenceServer.loginResponse1> loginAsync(PresenceTester.PresenceServer.loginRequest request);
        
        // CODEGEN: Generating message contract since the operation logout is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="urn:cisco:cup:presence:soap/logout", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        PresenceTester.PresenceServer.logoutResponse logout(PresenceTester.PresenceServer.logoutRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:cisco:cup:presence:soap/logout", ReplyAction="*")]
        System.Threading.Tasks.Task<PresenceTester.PresenceServer.logoutResponse> logoutAsync(PresenceTester.PresenceServer.logoutRequest request);
        
        // CODEGEN: Generating message contract since the operation getPolledPresence is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="urn:cisco:cup:presence:soap/getPresence", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        PresenceTester.PresenceServer.getPolledPresenceResponse1 getPolledPresence(PresenceTester.PresenceServer.getPolledPresenceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:cisco:cup:presence:soap/getPresence", ReplyAction="*")]
        System.Threading.Tasks.Task<PresenceTester.PresenceServer.getPolledPresenceResponse1> getPolledPresenceAsync(PresenceTester.PresenceServer.getPolledPresenceRequest request);
        
        // CODEGEN: Generating message contract since the operation getSubscribedPresence is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="urn:cisco:cup:presence:soap/getSubscribedPresence", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        PresenceTester.PresenceServer.getSubscribedPresenceResponse1 getSubscribedPresence(PresenceTester.PresenceServer.getSubscribedPresenceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:cisco:cup:presence:soap/getSubscribedPresence", ReplyAction="*")]
        System.Threading.Tasks.Task<PresenceTester.PresenceServer.getSubscribedPresenceResponse1> getSubscribedPresenceAsync(PresenceTester.PresenceServer.getSubscribedPresenceRequest request);
        
        // CODEGEN: Generating message contract since the operation setPresence is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="urn:cisco:cup:presence:soap/setPresence", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        PresenceTester.PresenceServer.setPresenceResponse setPresence(PresenceTester.PresenceServer.setPresenceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:cisco:cup:presence:soap/setPresence", ReplyAction="*")]
        System.Threading.Tasks.Task<PresenceTester.PresenceServer.setPresenceResponse> setPresenceAsync(PresenceTester.PresenceServer.setPresenceRequest request);
        
        // CODEGEN: Generating message contract since the operation subscribe is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="urn:cisco:cup:presence:soap/subscribe", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        PresenceTester.PresenceServer.subscribeResponse1 subscribe(PresenceTester.PresenceServer.subscribeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:cisco:cup:presence:soap/subscribe", ReplyAction="*")]
        System.Threading.Tasks.Task<PresenceTester.PresenceServer.subscribeResponse1> subscribeAsync(PresenceTester.PresenceServer.subscribeRequest request);
        
        // CODEGEN: Generating message contract since the operation unsubscribe is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="urn:cisco:cup:presence:soap/unsubscribe", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        PresenceTester.PresenceServer.unsubscribeResponse unsubscribe(PresenceTester.PresenceServer.unsubscribeRequest1 request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:cisco:cup:presence:soap/unsubscribe", ReplyAction="*")]
        System.Threading.Tasks.Task<PresenceTester.PresenceServer.unsubscribeResponse> unsubscribeAsync(PresenceTester.PresenceServer.unsubscribeRequest1 request);
        
        // CODEGEN: Generating message contract since the operation registerEndPoint is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="urn:cisco:cup:presence:soap/registerEndPoint", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        PresenceTester.PresenceServer.registerEndPointResponse1 registerEndPoint(PresenceTester.PresenceServer.registerEndPointRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:cisco:cup:presence:soap/registerEndPoint", ReplyAction="*")]
        System.Threading.Tasks.Task<PresenceTester.PresenceServer.registerEndPointResponse1> registerEndPointAsync(PresenceTester.PresenceServer.registerEndPointRequest request);
        
        // CODEGEN: Generating message contract since the operation unregisterEndPoint is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="urn:cisco:cup:presence:soap/unregisterEndPoint", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        PresenceTester.PresenceServer.unregisterEndPointResponse unregisterEndPoint(PresenceTester.PresenceServer.unregisterEndPointRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:cisco:cup:presence:soap/unregisterEndPoint", ReplyAction="*")]
        System.Threading.Tasks.Task<PresenceTester.PresenceServer.unregisterEndPointResponse> unregisterEndPointAsync(PresenceTester.PresenceServer.unregisterEndPointRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:cisco:cup:presence:soap")]
    public partial class login : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string usernameField;
        
        private string itemField;
        
        private ItemChoiceType itemElementNameField;
        
        private bool forceField;
        
        private bool forceFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="token", Order=0)]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
                this.RaisePropertyChanged("username");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("app-session-id", typeof(string), DataType="normalizedString", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute("password", typeof(string), DataType="normalizedString", Order=1)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
                this.RaisePropertyChanged("Item");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType ItemElementName {
            get {
                return this.itemElementNameField;
            }
            set {
                this.itemElementNameField = value;
                this.RaisePropertyChanged("ItemElementName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool force {
            get {
                return this.forceField;
            }
            set {
                this.forceField = value;
                this.RaisePropertyChanged("force");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool forceSpecified {
            get {
                return this.forceFieldSpecified;
            }
            set {
                this.forceFieldSpecified = value;
                this.RaisePropertyChanged("forceSpecified");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:cisco:cup:presence:soap", IncludeInSchema=false)]
    public enum ItemChoiceType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("app-session-id")]
        appsessionid,
        
        /// <remarks/>
        password,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:cisco:cup:presence:soap")]
    public partial class UnsubscribeRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int subscriptionIDField;
        
        private object itemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int subscriptionID {
            get {
                return this.subscriptionIDField;
            }
            set {
                this.subscriptionIDField = value;
                this.RaisePropertyChanged("subscriptionID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("contactsList", typeof(ContactListType), Order=1)]
        [System.Xml.Serialization.XmlElementAttribute("unsubscribeAll", typeof(object), Order=1)]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
                this.RaisePropertyChanged("Item");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:cisco:cup:presence:soap")]
    public partial class ContactListType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Contact[] contactField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("contact", Order=0)]
        public Contact[] contact {
            get {
                return this.contactField;
            }
            set {
                this.contactField = value;
                this.RaisePropertyChanged("contact");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:cisco:cup:presence:soap")]
    public partial class Contact : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string contactURIField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string contactURI {
            get {
                return this.contactURIField;
            }
            set {
                this.contactURIField = value;
                this.RaisePropertyChanged("contactURI");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:cisco:cup:presence:soap")]
    public partial class PresenceInfoType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string basicPresenceField;
        
        private object richPresenceField;
        
        private bool overrideField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string basicPresence {
            get {
                return this.basicPresenceField;
            }
            set {
                this.basicPresenceField = value;
                this.RaisePropertyChanged("basicPresence");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public object richPresence {
            get {
                return this.richPresenceField;
            }
            set {
                this.richPresenceField = value;
                this.RaisePropertyChanged("richPresence");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool @override {
            get {
                return this.overrideField;
            }
            set {
                this.overrideField = value;
                this.RaisePropertyChanged("override");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:cisco:cup:presence:soap")]
    public partial class ContactStatusType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string contactURIField;
        
        private GetPresenceStatusType presenceStatusField;
        
        private bool presenceStatusFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string contactURI {
            get {
                return this.contactURIField;
            }
            set {
                this.contactURIField = value;
                this.RaisePropertyChanged("contactURI");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public GetPresenceStatusType presenceStatus {
            get {
                return this.presenceStatusField;
            }
            set {
                this.presenceStatusField = value;
                this.RaisePropertyChanged("presenceStatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool presenceStatusSpecified {
            get {
                return this.presenceStatusFieldSpecified;
            }
            set {
                this.presenceStatusFieldSpecified = value;
                this.RaisePropertyChanged("presenceStatusSpecified");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:cisco:cup:presence:soap")]
    public enum GetPresenceStatusType {
        
        /// <remarks/>
        AVAILABLE,
        
        /// <remarks/>
        BUSY,
        
        /// <remarks/>
        DND,
        
        /// <remarks/>
        AWAY,
        
        /// <remarks/>
        UNAVAILABLE,
        
        /// <remarks/>
        UNKNOWN,
        
        /// <remarks/>
        VACATION,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:cisco:cup:presence:soap")]
    public partial class PresenceResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string presenceTypeField;
        
        private ContactStatusType[] basicPresenceListField;
        
        private object richPresenceListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string presenceType {
            get {
                return this.presenceTypeField;
            }
            set {
                this.presenceTypeField = value;
                this.RaisePropertyChanged("presenceType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute("contact", IsNullable=false)]
        public ContactStatusType[] basicPresenceList {
            get {
                return this.basicPresenceListField;
            }
            set {
                this.basicPresenceListField = value;
                this.RaisePropertyChanged("basicPresenceList");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public object richPresenceList {
            get {
                return this.richPresenceListField;
            }
            set {
                this.richPresenceListField = value;
                this.RaisePropertyChanged("richPresenceList");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:cisco:cup:presence:soap")]
    public partial class ResponseStatusType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ResponseStatusTypeStatus statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public ResponseStatusTypeStatus status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("status");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:cisco:cup:presence:soap")]
    public enum ResponseStatusTypeStatus {
        
        /// <remarks/>
        SUCCESS,
        
        /// <remarks/>
        FAILURE,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:cisco:cup:presence:soap")]
    public partial class LoginResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private object itemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("redirect", typeof(LoginResponseRedirect), Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("success", typeof(LoginResponseSuccess), Order=0)]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
                this.RaisePropertyChanged("Item");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:cisco:cup:presence:soap")]
    public partial class LoginResponseRedirect : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string primaryServerField;
        
        private string backupServerField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string primaryServer {
            get {
                return this.primaryServerField;
            }
            set {
                this.primaryServerField = value;
                this.RaisePropertyChanged("primaryServer");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string backupServer {
            get {
                return this.backupServerField;
            }
            set {
                this.backupServerField = value;
                this.RaisePropertyChanged("backupServer");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:cisco:cup:presence:soap")]
    public partial class LoginResponseSuccess : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string sessionkeyField;
        
        private string backupServerField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("session-key", DataType="token", Order=0)]
        public string sessionkey {
            get {
                return this.sessionkeyField;
            }
            set {
                this.sessionkeyField = value;
                this.RaisePropertyChanged("sessionkey");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string backupServer {
            get {
                return this.backupServerField;
            }
            set {
                this.backupServerField = value;
                this.RaisePropertyChanged("backupServer");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class loginRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:cisco:cup:presence:soap", Order=0)]
        public PresenceTester.PresenceServer.login login;
        
        public loginRequest() {
        }
        
        public loginRequest(PresenceTester.PresenceServer.login login) {
            this.login = login;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class loginResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:cisco:cup:presence:soap", Order=0)]
        public PresenceTester.PresenceServer.LoginResponse loginResponse;
        
        public loginResponse1() {
        }
        
        public loginResponse1(PresenceTester.PresenceServer.LoginResponse loginResponse) {
            this.loginResponse = loginResponse;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:cisco:cup:presence:soap")]
    public partial class logout : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class logoutRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Name="session-key", Namespace="urn:cisco:cup:presence:soap")]
        [System.Xml.Serialization.XmlElementAttribute("session-key")]
        public string sessionkey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:cisco:cup:presence:soap", Order=0)]
        public PresenceTester.PresenceServer.logout logout;
        
        public logoutRequest() {
        }
        
        public logoutRequest(string sessionkey, PresenceTester.PresenceServer.logout logout) {
            this.sessionkey = sessionkey;
            this.logout = logout;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class logoutResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="logoutResponse", Namespace="urn:cisco:cup:presence:soap", Order=0)]
        public PresenceTester.PresenceServer.ResponseStatusType logoutResponse1;
        
        public logoutResponse() {
        }
        
        public logoutResponse(PresenceTester.PresenceServer.ResponseStatusType logoutResponse1) {
            this.logoutResponse1 = logoutResponse1;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:cisco:cup:presence:soap")]
    public partial class getPolledPresence : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Contact[] contactsListField;
        
        private string presenceTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("contact", IsNullable=false)]
        public Contact[] contactsList {
            get {
                return this.contactsListField;
            }
            set {
                this.contactsListField = value;
                this.RaisePropertyChanged("contactsList");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string presenceType {
            get {
                return this.presenceTypeField;
            }
            set {
                this.presenceTypeField = value;
                this.RaisePropertyChanged("presenceType");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:cisco:cup:presence:soap")]
    public partial class getPolledPresenceResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private PresenceResponse presenceResponseField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public PresenceResponse presenceResponse {
            get {
                return this.presenceResponseField;
            }
            set {
                this.presenceResponseField = value;
                this.RaisePropertyChanged("presenceResponse");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getPolledPresenceRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Name="session-key", Namespace="urn:cisco:cup:presence:soap")]
        [System.Xml.Serialization.XmlElementAttribute("session-key")]
        public string sessionkey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:cisco:cup:presence:soap", Order=0)]
        public PresenceTester.PresenceServer.getPolledPresence getPolledPresence;
        
        public getPolledPresenceRequest() {
        }
        
        public getPolledPresenceRequest(string sessionkey, PresenceTester.PresenceServer.getPolledPresence getPolledPresence) {
            this.sessionkey = sessionkey;
            this.getPolledPresence = getPolledPresence;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getPolledPresenceResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:cisco:cup:presence:soap", Order=0)]
        public PresenceTester.PresenceServer.getPolledPresenceResponse getPolledPresenceResponse;
        
        public getPolledPresenceResponse1() {
        }
        
        public getPolledPresenceResponse1(PresenceTester.PresenceServer.getPolledPresenceResponse getPolledPresenceResponse) {
            this.getPolledPresenceResponse = getPolledPresenceResponse;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:cisco:cup:presence:soap")]
    public partial class getSubscribedPresence : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int subscriptionIDField;
        
        private string presenceTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int subscriptionID {
            get {
                return this.subscriptionIDField;
            }
            set {
                this.subscriptionIDField = value;
                this.RaisePropertyChanged("subscriptionID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string presenceType {
            get {
                return this.presenceTypeField;
            }
            set {
                this.presenceTypeField = value;
                this.RaisePropertyChanged("presenceType");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:cisco:cup:presence:soap")]
    public partial class getSubscribedPresenceResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private PresenceResponse presenceResponseField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public PresenceResponse presenceResponse {
            get {
                return this.presenceResponseField;
            }
            set {
                this.presenceResponseField = value;
                this.RaisePropertyChanged("presenceResponse");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getSubscribedPresenceRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Name="session-key", Namespace="urn:cisco:cup:presence:soap")]
        [System.Xml.Serialization.XmlElementAttribute("session-key")]
        public string sessionkey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:cisco:cup:presence:soap", Order=0)]
        public PresenceTester.PresenceServer.getSubscribedPresence getSubscribedPresence;
        
        public getSubscribedPresenceRequest() {
        }
        
        public getSubscribedPresenceRequest(string sessionkey, PresenceTester.PresenceServer.getSubscribedPresence getSubscribedPresence) {
            this.sessionkey = sessionkey;
            this.getSubscribedPresence = getSubscribedPresence;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getSubscribedPresenceResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:cisco:cup:presence:soap", Order=0)]
        public PresenceTester.PresenceServer.getSubscribedPresenceResponse getSubscribedPresenceResponse;
        
        public getSubscribedPresenceResponse1() {
        }
        
        public getSubscribedPresenceResponse1(PresenceTester.PresenceServer.getSubscribedPresenceResponse getSubscribedPresenceResponse) {
            this.getSubscribedPresenceResponse = getSubscribedPresenceResponse;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:cisco:cup:presence:soap")]
    public partial class setPresence : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string presenceTypeField;
        
        private PresenceInfoType presenceInfoField;
        
        private int expirationField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string presenceType {
            get {
                return this.presenceTypeField;
            }
            set {
                this.presenceTypeField = value;
                this.RaisePropertyChanged("presenceType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public PresenceInfoType presenceInfo {
            get {
                return this.presenceInfoField;
            }
            set {
                this.presenceInfoField = value;
                this.RaisePropertyChanged("presenceInfo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int expiration {
            get {
                return this.expirationField;
            }
            set {
                this.expirationField = value;
                this.RaisePropertyChanged("expiration");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class setPresenceRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Name="session-key", Namespace="urn:cisco:cup:presence:soap")]
        [System.Xml.Serialization.XmlElementAttribute("session-key")]
        public string sessionkey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:cisco:cup:presence:soap", Order=0)]
        public PresenceTester.PresenceServer.setPresence setPresence;
        
        public setPresenceRequest() {
        }
        
        public setPresenceRequest(string sessionkey, PresenceTester.PresenceServer.setPresence setPresence) {
            this.sessionkey = sessionkey;
            this.setPresence = setPresence;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class setPresenceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="setPresenceResponse", Namespace="urn:cisco:cup:presence:soap", Order=0)]
        public PresenceTester.PresenceServer.ResponseStatusType setPresenceResponse1;
        
        public setPresenceResponse() {
        }
        
        public setPresenceResponse(PresenceTester.PresenceServer.ResponseStatusType setPresenceResponse1) {
            this.setPresenceResponse1 = setPresenceResponse1;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:cisco:cup:presence:soap")]
    public partial class subscribe : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Contact[] contactsListField;
        
        private string subscriptionTypeField;
        
        private int expirationField;
        
        private bool expirationFieldSpecified;
        
        private int endPointIDField;
        
        private int subscriptionIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("contact", IsNullable=false)]
        public Contact[] contactsList {
            get {
                return this.contactsListField;
            }
            set {
                this.contactsListField = value;
                this.RaisePropertyChanged("contactsList");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string subscriptionType {
            get {
                return this.subscriptionTypeField;
            }
            set {
                this.subscriptionTypeField = value;
                this.RaisePropertyChanged("subscriptionType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int expiration {
            get {
                return this.expirationField;
            }
            set {
                this.expirationField = value;
                this.RaisePropertyChanged("expiration");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool expirationSpecified {
            get {
                return this.expirationFieldSpecified;
            }
            set {
                this.expirationFieldSpecified = value;
                this.RaisePropertyChanged("expirationSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int endPointID {
            get {
                return this.endPointIDField;
            }
            set {
                this.endPointIDField = value;
                this.RaisePropertyChanged("endPointID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public int subscriptionID {
            get {
                return this.subscriptionIDField;
            }
            set {
                this.subscriptionIDField = value;
                this.RaisePropertyChanged("subscriptionID");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:cisco:cup:presence:soap")]
    public partial class subscribeResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int subscriptionIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int subscriptionID {
            get {
                return this.subscriptionIDField;
            }
            set {
                this.subscriptionIDField = value;
                this.RaisePropertyChanged("subscriptionID");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class subscribeRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Name="session-key", Namespace="urn:cisco:cup:presence:soap")]
        [System.Xml.Serialization.XmlElementAttribute("session-key")]
        public string sessionkey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:cisco:cup:presence:soap", Order=0)]
        public PresenceTester.PresenceServer.subscribe subscribe;
        
        public subscribeRequest() {
        }
        
        public subscribeRequest(string sessionkey, PresenceTester.PresenceServer.subscribe subscribe) {
            this.sessionkey = sessionkey;
            this.subscribe = subscribe;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class subscribeResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:cisco:cup:presence:soap", Order=0)]
        public PresenceTester.PresenceServer.subscribeResponse subscribeResponse;
        
        public subscribeResponse1() {
        }
        
        public subscribeResponse1(PresenceTester.PresenceServer.subscribeResponse subscribeResponse) {
            this.subscribeResponse = subscribeResponse;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:cisco:cup:presence:soap")]
    public partial class unsubscribe : object, System.ComponentModel.INotifyPropertyChanged {
        
        private UnsubscribeRequest unsubscribeRequestField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public UnsubscribeRequest unsubscribeRequest {
            get {
                return this.unsubscribeRequestField;
            }
            set {
                this.unsubscribeRequestField = value;
                this.RaisePropertyChanged("unsubscribeRequest");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class unsubscribeRequest1 {
        
        [System.ServiceModel.MessageHeaderAttribute(Name="session-key", Namespace="urn:cisco:cup:presence:soap")]
        [System.Xml.Serialization.XmlElementAttribute("session-key")]
        public string sessionkey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:cisco:cup:presence:soap", Order=0)]
        public PresenceTester.PresenceServer.unsubscribe unsubscribe;
        
        public unsubscribeRequest1() {
        }
        
        public unsubscribeRequest1(string sessionkey, PresenceTester.PresenceServer.unsubscribe unsubscribe) {
            this.sessionkey = sessionkey;
            this.unsubscribe = unsubscribe;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class unsubscribeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="unsubscribeResponse", Namespace="urn:cisco:cup:presence:soap", Order=0)]
        public PresenceTester.PresenceServer.ResponseStatusType unsubscribeResponse1;
        
        public unsubscribeResponse() {
        }
        
        public unsubscribeResponse(PresenceTester.PresenceServer.ResponseStatusType unsubscribeResponse1) {
            this.unsubscribeResponse1 = unsubscribeResponse1;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:cisco:cup:presence:soap")]
    public partial class registerEndPoint : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string urlField;
        
        private int endPointIDField;
        
        private int expirationField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
                this.RaisePropertyChanged("url");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int endPointID {
            get {
                return this.endPointIDField;
            }
            set {
                this.endPointIDField = value;
                this.RaisePropertyChanged("endPointID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int expiration {
            get {
                return this.expirationField;
            }
            set {
                this.expirationField = value;
                this.RaisePropertyChanged("expiration");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:cisco:cup:presence:soap")]
    public partial class registerEndPointResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int endPointIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int endPointID {
            get {
                return this.endPointIDField;
            }
            set {
                this.endPointIDField = value;
                this.RaisePropertyChanged("endPointID");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class registerEndPointRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Name="session-key", Namespace="urn:cisco:cup:presence:soap")]
        [System.Xml.Serialization.XmlElementAttribute("session-key")]
        public string sessionkey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:cisco:cup:presence:soap", Order=0)]
        public PresenceTester.PresenceServer.registerEndPoint registerEndPoint;
        
        public registerEndPointRequest() {
        }
        
        public registerEndPointRequest(string sessionkey, PresenceTester.PresenceServer.registerEndPoint registerEndPoint) {
            this.sessionkey = sessionkey;
            this.registerEndPoint = registerEndPoint;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class registerEndPointResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:cisco:cup:presence:soap", Order=0)]
        public PresenceTester.PresenceServer.registerEndPointResponse registerEndPointResponse;
        
        public registerEndPointResponse1() {
        }
        
        public registerEndPointResponse1(PresenceTester.PresenceServer.registerEndPointResponse registerEndPointResponse) {
            this.registerEndPointResponse = registerEndPointResponse;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:cisco:cup:presence:soap")]
    public partial class unregisterEndPoint : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int endPointIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int endPointID {
            get {
                return this.endPointIDField;
            }
            set {
                this.endPointIDField = value;
                this.RaisePropertyChanged("endPointID");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class unregisterEndPointRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Name="session-key", Namespace="urn:cisco:cup:presence:soap")]
        [System.Xml.Serialization.XmlElementAttribute("session-key")]
        public string sessionkey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:cisco:cup:presence:soap", Order=0)]
        public PresenceTester.PresenceServer.unregisterEndPoint unregisterEndPoint;
        
        public unregisterEndPointRequest() {
        }
        
        public unregisterEndPointRequest(string sessionkey, PresenceTester.PresenceServer.unregisterEndPoint unregisterEndPoint) {
            this.sessionkey = sessionkey;
            this.unregisterEndPoint = unregisterEndPoint;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class unregisterEndPointResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="unregisterEndPointResponse", Namespace="urn:cisco:cup:presence:soap", Order=0)]
        public PresenceTester.PresenceServer.ResponseStatusType unregisterEndPointResponse1;
        
        public unregisterEndPointResponse() {
        }
        
        public unregisterEndPointResponse(PresenceTester.PresenceServer.ResponseStatusType unregisterEndPointResponse1) {
            this.unregisterEndPointResponse1 = unregisterEndPointResponse1;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface PresenceSoapPortTypeChannel : PresenceTester.PresenceServer.PresenceSoapPortType, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PresenceSoapPortTypeClient : System.ServiceModel.ClientBase<PresenceTester.PresenceServer.PresenceSoapPortType>, PresenceTester.PresenceServer.PresenceSoapPortType {
        
        public PresenceSoapPortTypeClient() {
        }
        
        public PresenceSoapPortTypeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PresenceSoapPortTypeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PresenceSoapPortTypeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PresenceSoapPortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PresenceTester.PresenceServer.loginResponse1 PresenceTester.PresenceServer.PresenceSoapPortType.login(PresenceTester.PresenceServer.loginRequest request) {
            return base.Channel.login(request);
        }
        
        public PresenceTester.PresenceServer.LoginResponse login(PresenceTester.PresenceServer.login login1) {
            PresenceTester.PresenceServer.loginRequest inValue = new PresenceTester.PresenceServer.loginRequest();
            inValue.login = login1;
            PresenceTester.PresenceServer.loginResponse1 retVal = ((PresenceTester.PresenceServer.PresenceSoapPortType)(this)).login(inValue);
            return retVal.loginResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<PresenceTester.PresenceServer.loginResponse1> PresenceTester.PresenceServer.PresenceSoapPortType.loginAsync(PresenceTester.PresenceServer.loginRequest request) {
            return base.Channel.loginAsync(request);
        }
        
        public System.Threading.Tasks.Task<PresenceTester.PresenceServer.loginResponse1> loginAsync(PresenceTester.PresenceServer.login login) {
            PresenceTester.PresenceServer.loginRequest inValue = new PresenceTester.PresenceServer.loginRequest();
            inValue.login = login;
            return ((PresenceTester.PresenceServer.PresenceSoapPortType)(this)).loginAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PresenceTester.PresenceServer.logoutResponse PresenceTester.PresenceServer.PresenceSoapPortType.logout(PresenceTester.PresenceServer.logoutRequest request) {
            return base.Channel.logout(request);
        }
        
        public PresenceTester.PresenceServer.ResponseStatusType logout(string sessionkey, PresenceTester.PresenceServer.logout logout1) {
            PresenceTester.PresenceServer.logoutRequest inValue = new PresenceTester.PresenceServer.logoutRequest();
            inValue.sessionkey = sessionkey;
            inValue.logout = logout1;
            PresenceTester.PresenceServer.logoutResponse retVal = ((PresenceTester.PresenceServer.PresenceSoapPortType)(this)).logout(inValue);
            return retVal.logoutResponse1;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<PresenceTester.PresenceServer.logoutResponse> PresenceTester.PresenceServer.PresenceSoapPortType.logoutAsync(PresenceTester.PresenceServer.logoutRequest request) {
            return base.Channel.logoutAsync(request);
        }
        
        public System.Threading.Tasks.Task<PresenceTester.PresenceServer.logoutResponse> logoutAsync(string sessionkey, PresenceTester.PresenceServer.logout logout) {
            PresenceTester.PresenceServer.logoutRequest inValue = new PresenceTester.PresenceServer.logoutRequest();
            inValue.sessionkey = sessionkey;
            inValue.logout = logout;
            return ((PresenceTester.PresenceServer.PresenceSoapPortType)(this)).logoutAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PresenceTester.PresenceServer.getPolledPresenceResponse1 PresenceTester.PresenceServer.PresenceSoapPortType.getPolledPresence(PresenceTester.PresenceServer.getPolledPresenceRequest request) {
            return base.Channel.getPolledPresence(request);
        }
        
        public PresenceTester.PresenceServer.getPolledPresenceResponse getPolledPresence(string sessionkey, PresenceTester.PresenceServer.getPolledPresence getPolledPresence1) {
            PresenceTester.PresenceServer.getPolledPresenceRequest inValue = new PresenceTester.PresenceServer.getPolledPresenceRequest();
            inValue.sessionkey = sessionkey;
            inValue.getPolledPresence = getPolledPresence1;
            PresenceTester.PresenceServer.getPolledPresenceResponse1 retVal = ((PresenceTester.PresenceServer.PresenceSoapPortType)(this)).getPolledPresence(inValue);
            return retVal.getPolledPresenceResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<PresenceTester.PresenceServer.getPolledPresenceResponse1> PresenceTester.PresenceServer.PresenceSoapPortType.getPolledPresenceAsync(PresenceTester.PresenceServer.getPolledPresenceRequest request) {
            return base.Channel.getPolledPresenceAsync(request);
        }
        
        public System.Threading.Tasks.Task<PresenceTester.PresenceServer.getPolledPresenceResponse1> getPolledPresenceAsync(string sessionkey, PresenceTester.PresenceServer.getPolledPresence getPolledPresence) {
            PresenceTester.PresenceServer.getPolledPresenceRequest inValue = new PresenceTester.PresenceServer.getPolledPresenceRequest();
            inValue.sessionkey = sessionkey;
            inValue.getPolledPresence = getPolledPresence;
            return ((PresenceTester.PresenceServer.PresenceSoapPortType)(this)).getPolledPresenceAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PresenceTester.PresenceServer.getSubscribedPresenceResponse1 PresenceTester.PresenceServer.PresenceSoapPortType.getSubscribedPresence(PresenceTester.PresenceServer.getSubscribedPresenceRequest request) {
            return base.Channel.getSubscribedPresence(request);
        }
        
        public PresenceTester.PresenceServer.getSubscribedPresenceResponse getSubscribedPresence(string sessionkey, PresenceTester.PresenceServer.getSubscribedPresence getSubscribedPresence1) {
            PresenceTester.PresenceServer.getSubscribedPresenceRequest inValue = new PresenceTester.PresenceServer.getSubscribedPresenceRequest();
            inValue.sessionkey = sessionkey;
            inValue.getSubscribedPresence = getSubscribedPresence1;
            PresenceTester.PresenceServer.getSubscribedPresenceResponse1 retVal = ((PresenceTester.PresenceServer.PresenceSoapPortType)(this)).getSubscribedPresence(inValue);
            return retVal.getSubscribedPresenceResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<PresenceTester.PresenceServer.getSubscribedPresenceResponse1> PresenceTester.PresenceServer.PresenceSoapPortType.getSubscribedPresenceAsync(PresenceTester.PresenceServer.getSubscribedPresenceRequest request) {
            return base.Channel.getSubscribedPresenceAsync(request);
        }
        
        public System.Threading.Tasks.Task<PresenceTester.PresenceServer.getSubscribedPresenceResponse1> getSubscribedPresenceAsync(string sessionkey, PresenceTester.PresenceServer.getSubscribedPresence getSubscribedPresence) {
            PresenceTester.PresenceServer.getSubscribedPresenceRequest inValue = new PresenceTester.PresenceServer.getSubscribedPresenceRequest();
            inValue.sessionkey = sessionkey;
            inValue.getSubscribedPresence = getSubscribedPresence;
            return ((PresenceTester.PresenceServer.PresenceSoapPortType)(this)).getSubscribedPresenceAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PresenceTester.PresenceServer.setPresenceResponse PresenceTester.PresenceServer.PresenceSoapPortType.setPresence(PresenceTester.PresenceServer.setPresenceRequest request) {
            return base.Channel.setPresence(request);
        }
        
        public PresenceTester.PresenceServer.ResponseStatusType setPresence(string sessionkey, PresenceTester.PresenceServer.setPresence setPresence1) {
            PresenceTester.PresenceServer.setPresenceRequest inValue = new PresenceTester.PresenceServer.setPresenceRequest();
            inValue.sessionkey = sessionkey;
            inValue.setPresence = setPresence1;
            PresenceTester.PresenceServer.setPresenceResponse retVal = ((PresenceTester.PresenceServer.PresenceSoapPortType)(this)).setPresence(inValue);
            return retVal.setPresenceResponse1;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<PresenceTester.PresenceServer.setPresenceResponse> PresenceTester.PresenceServer.PresenceSoapPortType.setPresenceAsync(PresenceTester.PresenceServer.setPresenceRequest request) {
            return base.Channel.setPresenceAsync(request);
        }
        
        public System.Threading.Tasks.Task<PresenceTester.PresenceServer.setPresenceResponse> setPresenceAsync(string sessionkey, PresenceTester.PresenceServer.setPresence setPresence) {
            PresenceTester.PresenceServer.setPresenceRequest inValue = new PresenceTester.PresenceServer.setPresenceRequest();
            inValue.sessionkey = sessionkey;
            inValue.setPresence = setPresence;
            return ((PresenceTester.PresenceServer.PresenceSoapPortType)(this)).setPresenceAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PresenceTester.PresenceServer.subscribeResponse1 PresenceTester.PresenceServer.PresenceSoapPortType.subscribe(PresenceTester.PresenceServer.subscribeRequest request) {
            return base.Channel.subscribe(request);
        }
        
        public PresenceTester.PresenceServer.subscribeResponse subscribe(string sessionkey, PresenceTester.PresenceServer.subscribe subscribe1) {
            PresenceTester.PresenceServer.subscribeRequest inValue = new PresenceTester.PresenceServer.subscribeRequest();
            inValue.sessionkey = sessionkey;
            inValue.subscribe = subscribe1;
            PresenceTester.PresenceServer.subscribeResponse1 retVal = ((PresenceTester.PresenceServer.PresenceSoapPortType)(this)).subscribe(inValue);
            return retVal.subscribeResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<PresenceTester.PresenceServer.subscribeResponse1> PresenceTester.PresenceServer.PresenceSoapPortType.subscribeAsync(PresenceTester.PresenceServer.subscribeRequest request) {
            return base.Channel.subscribeAsync(request);
        }
        
        public System.Threading.Tasks.Task<PresenceTester.PresenceServer.subscribeResponse1> subscribeAsync(string sessionkey, PresenceTester.PresenceServer.subscribe subscribe) {
            PresenceTester.PresenceServer.subscribeRequest inValue = new PresenceTester.PresenceServer.subscribeRequest();
            inValue.sessionkey = sessionkey;
            inValue.subscribe = subscribe;
            return ((PresenceTester.PresenceServer.PresenceSoapPortType)(this)).subscribeAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PresenceTester.PresenceServer.unsubscribeResponse PresenceTester.PresenceServer.PresenceSoapPortType.unsubscribe(PresenceTester.PresenceServer.unsubscribeRequest1 request) {
            return base.Channel.unsubscribe(request);
        }
        
        public PresenceTester.PresenceServer.ResponseStatusType unsubscribe(string sessionkey, PresenceTester.PresenceServer.unsubscribe unsubscribe1) {
            PresenceTester.PresenceServer.unsubscribeRequest1 inValue = new PresenceTester.PresenceServer.unsubscribeRequest1();
            inValue.sessionkey = sessionkey;
            inValue.unsubscribe = unsubscribe1;
            PresenceTester.PresenceServer.unsubscribeResponse retVal = ((PresenceTester.PresenceServer.PresenceSoapPortType)(this)).unsubscribe(inValue);
            return retVal.unsubscribeResponse1;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<PresenceTester.PresenceServer.unsubscribeResponse> PresenceTester.PresenceServer.PresenceSoapPortType.unsubscribeAsync(PresenceTester.PresenceServer.unsubscribeRequest1 request) {
            return base.Channel.unsubscribeAsync(request);
        }
        
        public System.Threading.Tasks.Task<PresenceTester.PresenceServer.unsubscribeResponse> unsubscribeAsync(string sessionkey, PresenceTester.PresenceServer.unsubscribe unsubscribe) {
            PresenceTester.PresenceServer.unsubscribeRequest1 inValue = new PresenceTester.PresenceServer.unsubscribeRequest1();
            inValue.sessionkey = sessionkey;
            inValue.unsubscribe = unsubscribe;
            return ((PresenceTester.PresenceServer.PresenceSoapPortType)(this)).unsubscribeAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PresenceTester.PresenceServer.registerEndPointResponse1 PresenceTester.PresenceServer.PresenceSoapPortType.registerEndPoint(PresenceTester.PresenceServer.registerEndPointRequest request) {
            return base.Channel.registerEndPoint(request);
        }
        
        public PresenceTester.PresenceServer.registerEndPointResponse registerEndPoint(string sessionkey, PresenceTester.PresenceServer.registerEndPoint registerEndPoint1) {
            PresenceTester.PresenceServer.registerEndPointRequest inValue = new PresenceTester.PresenceServer.registerEndPointRequest();
            inValue.sessionkey = sessionkey;
            inValue.registerEndPoint = registerEndPoint1;
            PresenceTester.PresenceServer.registerEndPointResponse1 retVal = ((PresenceTester.PresenceServer.PresenceSoapPortType)(this)).registerEndPoint(inValue);
            return retVal.registerEndPointResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<PresenceTester.PresenceServer.registerEndPointResponse1> PresenceTester.PresenceServer.PresenceSoapPortType.registerEndPointAsync(PresenceTester.PresenceServer.registerEndPointRequest request) {
            return base.Channel.registerEndPointAsync(request);
        }
        
        public System.Threading.Tasks.Task<PresenceTester.PresenceServer.registerEndPointResponse1> registerEndPointAsync(string sessionkey, PresenceTester.PresenceServer.registerEndPoint registerEndPoint) {
            PresenceTester.PresenceServer.registerEndPointRequest inValue = new PresenceTester.PresenceServer.registerEndPointRequest();
            inValue.sessionkey = sessionkey;
            inValue.registerEndPoint = registerEndPoint;
            return ((PresenceTester.PresenceServer.PresenceSoapPortType)(this)).registerEndPointAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PresenceTester.PresenceServer.unregisterEndPointResponse PresenceTester.PresenceServer.PresenceSoapPortType.unregisterEndPoint(PresenceTester.PresenceServer.unregisterEndPointRequest request) {
            return base.Channel.unregisterEndPoint(request);
        }
        
        public PresenceTester.PresenceServer.ResponseStatusType unregisterEndPoint(string sessionkey, PresenceTester.PresenceServer.unregisterEndPoint unregisterEndPoint1) {
            PresenceTester.PresenceServer.unregisterEndPointRequest inValue = new PresenceTester.PresenceServer.unregisterEndPointRequest();
            inValue.sessionkey = sessionkey;
            inValue.unregisterEndPoint = unregisterEndPoint1;
            PresenceTester.PresenceServer.unregisterEndPointResponse retVal = ((PresenceTester.PresenceServer.PresenceSoapPortType)(this)).unregisterEndPoint(inValue);
            return retVal.unregisterEndPointResponse1;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<PresenceTester.PresenceServer.unregisterEndPointResponse> PresenceTester.PresenceServer.PresenceSoapPortType.unregisterEndPointAsync(PresenceTester.PresenceServer.unregisterEndPointRequest request) {
            return base.Channel.unregisterEndPointAsync(request);
        }
        
        public System.Threading.Tasks.Task<PresenceTester.PresenceServer.unregisterEndPointResponse> unregisterEndPointAsync(string sessionkey, PresenceTester.PresenceServer.unregisterEndPoint unregisterEndPoint) {
            PresenceTester.PresenceServer.unregisterEndPointRequest inValue = new PresenceTester.PresenceServer.unregisterEndPointRequest();
            inValue.sessionkey = sessionkey;
            inValue.unregisterEndPoint = unregisterEndPoint;
            return ((PresenceTester.PresenceServer.PresenceSoapPortType)(this)).unregisterEndPointAsync(inValue);
        }
    }
}
